import { _ as _export_sfc, o as openBlock, c as createElementBlock, a as createStaticVNode } from "./app.b0857ca0.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="padstart\u586B\u5145\u5DE6\u4FA7\u5B57\u7B26" tabindex="-1"><a class="header-anchor" href="#padstart\u586B\u5145\u5DE6\u4FA7\u5B57\u7B26" aria-hidden="true">#</a> padStart\u586B\u5145\u5DE6\u4FA7\u5B57\u7B26</h1><p>\u5982\u679C<code>string</code>\u5B57\u7B26\u4E32\u957F\u5EA6\u5C0F\u4E8E <code>length</code> \u5219\u5728\u5DE6\u4FA7\u586B\u5145\u5B57\u7B26\u3002 \u5982\u679C\u8D85\u51FA<code>length</code>\u957F\u5EA6\u5219\u622A\u65AD\u8D85\u51FA\u7684\u90E8\u5206\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">padStart</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> maskChar <span class="token operator">=</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>\u53C2\u6570</strong></p><ol><li><code>[str=&#39;&#39;]</code>: \u8981\u586B\u5145\u7684\u5B57\u7B26\u4E32\u3002</li><li><code>[n=0]</code>: \u586B\u5145\u7684\u957F\u5EA6\u3002</li><li><code>[maskChar=&#39; &#39;]</code>: \u586B\u5145\u5B57\u7B26\u3002</li></ol><p><strong>\u8FD4\u56DE</strong> \u8FD4\u56DE\u586B\u5145\u540E\u7684\u5B57\u7B26\u4E32\u3002</p><p><strong>\u4F8B\u5B50</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// =&gt; &#39;   abc&#39;</span>\n \n<span class="token function">padStart</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// =&gt; &#39;***abc&#39;</span>\n \n<span class="token function">padStart</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// =&gt; &#39;abc&#39;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6E90\u7801</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> padStart <span class="token operator">=</span> <span class="token punctuation">(</span>str<span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> maskChar <span class="token operator">=</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">String</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> maskChar<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>', 10);
const _hoisted_11 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_11);
}
var padStart_______html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "padStart\u586B\u5145\u5DE6\u4FA7\u5B57\u7B26.html.vue"]]);
export { padStart_______html as default };

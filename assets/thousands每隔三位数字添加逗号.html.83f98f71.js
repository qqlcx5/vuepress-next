import { _ as _export_sfc, o as openBlock, c as createElementBlock, a as createStaticVNode } from "./app.b0857ca0.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="thousands\u6570\u5B57\u6BCF\u9694\u4E09\u4F4D\u6570\u52A0\u5206\u53F7" tabindex="-1"><a class="header-anchor" href="#thousands\u6570\u5B57\u6BCF\u9694\u4E09\u4F4D\u6570\u52A0\u5206\u53F7" aria-hidden="true">#</a> <code>thousands</code>\u6570\u5B57\u6BCF\u9694\u4E09\u4F4D\u6570\u52A0\u5206\u53F7</h1><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">thousands</span><span class="token punctuation">(</span>number<span class="token punctuation">,</span> chars<span class="token operator">=</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>\u8FD4\u56DE</strong> \u8FD4\u56DE\u586B\u5145\u540E\u7684\u5B57\u7B26\u4E32\u3002</p><p><strong>\u53C2\u6570</strong></p><ol><li><code>number</code> \u6570\u5B57\u6216\u8005\u6D6E\u70B9\u6570</li><li><code>chars</code> \u586B\u5145\u5B57\u7B26</li></ol><p><strong>\u4F8B\u5B50</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">thousands</span><span class="token punctuation">(</span><span class="token number">12255552323</span><span class="token punctuation">)</span>\n<span class="token comment">// =&gt; 12,255,552,323</span>\n\n<span class="token function">thousands</span><span class="token punctuation">(</span><span class="token number">12255552323</span><span class="token punctuation">,</span> <span class="token string">&#39;\u3001&#39;</span><span class="token punctuation">)</span>\n<span class="token comment">// =&gt; 12\u3001255\u3001552\u3001323</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6E90\u7801</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> thousands <span class="token operator">=</span> <span class="token punctuation">(</span>num<span class="token punctuation">,</span> chars<span class="token operator">=</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">String</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">?</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\d)(?=(\\d{3})+\\.)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span> <span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\d)(?=(\\d{3})+$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">$1</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>chars<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>', 9);
const _hoisted_10 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_10);
}
var thousands___________html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "thousands\u6BCF\u9694\u4E09\u4F4D\u6570\u5B57\u6DFB\u52A0\u9017\u53F7.html.vue"]]);
export { thousands___________html as default };

import { _ as _export_sfc, o as openBlock, c as createElementBlock, a as createStaticVNode } from "./app.b0857ca0.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="debounce\u51FD\u6570\u9632\u6296" tabindex="-1"><a class="header-anchor" href="#debounce\u51FD\u6570\u9632\u6296" aria-hidden="true">#</a> <code>debounce</code>\u51FD\u6570\u9632\u6296</h1><p>\u5728\u4E8B\u4EF6\u88AB\u89E6\u53D1 n \u79D2\u540E\u518D\u6267\u884C\u56DE\u8C03\uFF0C\u5982\u679C\u5728\u8FD9 n \u79D2\u5185\u53C8\u88AB\u89E6\u53D1\uFF0C\u5219\u91CD\u65B0\u8BA1\u65F6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">debounce</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> wait<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>\u53C2\u6570</strong></p><ul><li><code>fn</code> \u8981\u9632\u6296\u52A8\u7684\u51FD\u6570</li><li><code>wait=500</code>\u9700\u8981\u5EF6\u8FDF\u7684\u6BEB\u79D2\u6570</li></ul><p><strong>\u4F8B\u5B50</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>debounce(()=&gt; { console.log(&#39;debounce&#39;) }, 1000)\n// =&gt; 1\u79D2\u540E\u6253\u5370&#39;debounce&#39;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6E90\u7801</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/** *\n * \u9632\u6296\n * <span class="token keyword">@parmas</span> fn \u56DE\u8C03\u51FD\u6570\n * <span class="token keyword">@parmas</span> time \u89C4\u5B9A\u65F6\u95F4\n */</span>\n<span class="token keyword">const</span> debounce <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> wait <span class="token operator">=</span> <span class="token number">500</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> context <span class="token operator">=</span> <span class="token keyword">this</span> <span class="token comment">// \u6CE8\u610F this \u6307\u5411</span>\n        <span class="token keyword">let</span> args <span class="token operator">=</span> arguments <span class="token comment">// arguments\u4E2D\u5B58\u7740e</span>\n        <span class="token keyword">let</span> name <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">||</span> <span class="token string">&#39;arrow&#39;</span> <span class="token comment">//\u7BAD\u5934\u51FD\u6570</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>timer<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span>\n        timer<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>', 9);
const _hoisted_10 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_10);
}
var debounce_____html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "debounce\u51FD\u6570\u9632\u6296.html.vue"]]);
export { debounce_____html as default };
